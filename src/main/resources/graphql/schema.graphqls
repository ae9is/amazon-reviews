# See GraphQLConfig.java for wiring for scalars
scalar Long
scalar JSON
scalar DateTime
  @specifiedBy(url: "https://scalars.graphql.org/andimarek/date-time.html")

type Query {
  itemSummariesByCategory(category: String!, params: ItemPaginationInput): ItemSummaryResult
  itemById(id: Long!): Item
  itemByAsin(asin: String!): Item
  reviewsByAsin(asin: String!, params: ReviewPaginationInput): ReviewResult
  reviewById(id: Long!): Review
  categories(main: Boolean, params: CategoryPaginationInput): CategoryResult
  topItemSales(params: SalesPaginationInput): ItemSalesResult
}

type ItemSummaryResult {
  list: [ItemSummary]
  cursor: String!
}

type ReviewResult {
  list: [Review]
  cursor: String!
}

type CategoryResult {
  list: [Category]
  cursor: String!
}

type ItemSalesResult {
  list: [ItemSales]
  cursor: String!
}

enum ReviewSort {
  VOTES
  NEWEST
}

enum ItemSort {
  AVG_RATING
  RATING_NUMBER
  LOW_PRICE
}

enum CategorySort {
  NAME
  ITEM_COUNT
  RATING_NUMBER
}

enum SalesSort {
  RATING_NUMBER
  VERIF_PURCHASE
}

input ReviewPaginationInput {
  cursor: String
  limit: Int
  sort: ReviewSort
}

input ItemPaginationInput {
  cursor: String
  limit: Int
  sort: ItemSort
}

input CategoryPaginationInput {
  cursor: String
  limit: Int
  sort: CategorySort
}

input SalesPaginationInput {
  cursor: String
  limit: Int
  sort: SalesSort
}

type Review {
  id: Long!
  rating: Int
  title: String
  text: String
  images: [ReviewImage]
  asin: String
  parentAsin: String
  userID: String
  timestamp: DateTime
  helpfulVote: Long
  verifiedPurchase: Boolean
}

type ReviewImage {
  id: Long!
  smallImageURL: String
  mediumImageURL: String
  largeImageURL: String
  attachmentType: String
}

type Item {
  id: Long!
  mainCategory: String
  title: String
  subtitle: String
  averageRating: Float
  ratingNumber: Long
  features: [String]
  description: [String]
  price: Float
  images: [ItemImage]
  videos: [ItemVideo]
  store: String
  categories: [String]
  details: JSON
  parentAsin: String
  author: ItemAuthor
}

type ItemSummary {
  id: Long!
  title: String
  subtitle: String
  averageRating: Float
  ratingNumber: Long
  price: Float
  store: String
  parentAsin: String
}

type ItemImage {
  id: Long!
  thumb: String
  large: String
  variant: String
  hiRes: String
}

type ItemVideo {
  id: Long!
  title: String
  url: String
  creatorHandle: String
}

type ItemAuthor {
  id: Long!
  avatar: String
  name: String
  about: [String]
}

type Category {
  id: Long!
  label: String!
  itemCount: Long
  ratingNumber: Long
}

type ItemSales {
  item: ItemSummary!
  numVerifiedReviews: Long
  sales: Float!
}
