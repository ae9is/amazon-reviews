[project]
name = "amazonrev"
version = "0.0.1"
requires-python = ">=3.12,<3.13"
dependencies = [
    "python-dotenv>=1.0.1",
    "numpy>=1.26.4",
    "fastapi>=0.111.0",
    "transformers>=4.40.2",
    "pandas>=2.2.2",
    "huggingface-hub>=0.23.2",
]

[project.optional-dependencies]
cuda = [
    # For GPU torch on Linux. Optional for api (limits runtime options, and much larger Docker image).
    "torch>=2.3.0",
    # For GPU torch 2.3.0. PDM resolves dependencies, but needed for production requirements for installing via pip.
    "nvidia-cuda-nvrtc-cu12==12.1.105",
    "nvidia-cuda-runtime-cu12==12.1.105",
    "nvidia-cuda-cupti-cu12==12.1.105",
    "nvidia-cudnn-cu12==8.9.2.26",
    "nvidia-cublas-cu12==12.1.3.1",
    "nvidia-cufft-cu12==11.0.2.54",
    "nvidia-curand-cu12==10.3.2.106",
    "nvidia-cusolver-cu12==11.4.5.107",
    "nvidia-cusparse-cu12==12.1.0.106",
    "nvidia-nccl-cu12==2.20.5",
    "nvidia-nvtx-cu12==12.1.105",
]
cpu = [
    # For CPU only torch, which is fine for the api (but too slow for generating embeddings for the database):
    "torch @ https://download.pytorch.org/whl/cpu-cxx11-abi/torch-2.3.0%2Bcpu.cxx11.abi-cp312-cp312-linux_x86_64.whl",
]

[tool.pdm]
distribution = false

[tool.pdm.scripts]
install-cuda = "pdm add -G cuda"
install-cpu = "pdm add -G cpu"
export-cuda = "pdm export --group cuda --prod -o requirements.prod.cuda.txt"
export-cpu = "pdm export --group cpu --prod -o requirements.prod.cpu.txt"
lint = "ruff check src test"
format = "ruff format ."
post_install = { shell = """
  pdm export -o requirements.txt
""" }
clean = "rm -rf .venv .pdm-build .pdm-python .ruff_cache dist .pytest_cache"
dev = "uvicorn --port 5000 --reload --app-dir src/main/python/amazonrev app:app"
test = "python -m pytest" # Depends on running dev server
parser = { shell = """
  python -u src/main/python/amazonrev/item_parser.py 2>&1 | tee parser-`date -Iminutes`.log
""" }
get-model = "python -u src/main/python/amazonrev/get_model.py"

[tool.pdm.dev-dependencies]
dev = [
    "ruff>=0.2.1",
    "pytest>=8.0.0",
    "uvicorn[standard]>=0.27.0.post1",
    "requests>=2.31.0",
]

[tool.ruff]
exclude = [
  ".git",
  ".venv",
  "__pycache__",
  "*.bak",
  "*.pyc",
]
line-length = 120
indent-width = 2
target-version = "py312"

[tool.ruff.format]
quote-style = "single"

[tool.pytest.ini_options]
pythonpath = [
  ".", "src",
]
testpaths = "src"
